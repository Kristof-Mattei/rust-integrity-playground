name: Promote container

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# Controls when the workflow will run
on:
  # Triggers the workflow pushes to main, which by control in GitHub should only be PR merges
  pull_request:
    branches: [ main ]
    types: [ closed ]

  # I don't think we need this
  # workflow_dispatch:

jobs:
  add_latest_tag_to_incoming_commit:
    name: "Add :latest tag to the Docker container built by the incoming PR."
    if: ${{ github.event.pull_request.merged }} # TODO figure out how we can also trigger this on a tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#       - name: Log into registry ${{ env.REGISTRY }}
#         uses: docker/login-action@v1
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@v3
#         with:
#           # images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#           images: ""
#           tags: |
#             type=edge
#             type=raw,value=latest
#             type=sha,prefix=sha-,format=long
#             type=ref,event=branch
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}

      - name: Add additional tags to image, since we accepted it as part of our main codebase
        shell: bash
        env:
#           TAGS: ${{ join(fromJSON(steps.meta.outputs.json).tags, ',') }}
          TAGS: "foo, bar"
          PR_RUN_NUMBER: "12" #${{ github.event.number }}
        run: |
          # the ,, means tolowercase. See https://www.gnu.org/software/bash/manual/bash.html#Shell-Parameter-Expansion
          incoming_tag="pr-${PR_RUN_NUMBER}"

          base_url="https://${REGISTRY}/v2/${IMAGE_NAME,,}/manifests"

          accept_content_type="application/vnd.docker.distribution.manifest.v2+json"

          authorization_header="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

          curl \
            --request GET \
            --url "${base_url}/${incoming_tag}" \
            --header "Accept: ${accept_content_type}" \
            --header "${authorization_header}" \
            > manifest.json
  
          # Parse the other tags
          IFS=',' read -ra tags <<< "${TAGS}"

          echo "Adding the following tags: ${TAGS}"

          for tag in "${tags[@]}"
          do
              curl \
                --request PUT \
                --url "${base_url}/${tag}" \
                --header "Content-Type: ${accept_content_type}" \
                --header "${authorization_header}" \
                -d "@manifest.json"
          done

  

