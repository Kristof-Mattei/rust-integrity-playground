name: Retag Docker

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# Controls when the workflow will run
on:
  # Triggers the workflow pushes to main, which by control in GitHub should only be PR merges
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  dump:
    name: Dump
    runs-on: ubuntu-latest
    env:
      GITHUB: ${{toJson(github)}}
    steps:
      - name: Dump
        shell: bash
        run: |
          echo ${GITHUB}

  # pull_add_tag_push:
  #   name: "Pull, add tag, push"

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 2 # make sure we get the commit previous to the merge as that one is the actual last build

  #     - name: Log into registry ${{ env.REGISTRY }}
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     # Extract metadata (tags, labels) for Docker
  #     # https://github.com/docker/metadata-action
  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=edge
  #           type=sha,prefix=sha-,format=long
  #           type=ref,event=branch
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}

  #     - name: Add additional tags to image, since we accepted it as part of our main codebase
  #       shell: bash
  #       env:
  #         TAGS: ${{ join(fromJSON(steps.meta.outputs.json).tags, ',') }}
  #       run: |
  #         # validate current commit is a merge commit, otherwise we fail
  #         incoming_merge=$(git rev-parse HEAD^2);

  #         if [ $? -ne 0 ]; then
  #           exit 1;
  #         fi

  #         # create new image <name>
  #         # the ,, means tolowercase. See https://www.gnu.org/software/bash/manual/bash.html#Shell-Parameter-Expansion
  #         full_image_name=${REGISTRY,,}/${IMAGE_NAME,,}

  #         # we pull that image down
  #         docker pull ${full_image_name}:sha-${incoming_merge}

  #         # add latest tag
  #         docker tag ${full_image_name}:sha-${incoming_merge} ${full_image_name}:latest

  #         # and push
  #         docker push ${full_image_name}:latest

  #         # and the other tags
  #         IFS=',' read -ra tags <<< "${TAGS}"

  #         for tag in "${tags[@]}"
  #         do
  #             echo ${tag}
  #             docker tag ${full_image_name}:sha-${incoming_merge} ${tag}
  #         done

  #         for tag in "${tags[@]}"
  #         do
  #             echo ${tag}
  #             docker push ${tag}
  #         done
